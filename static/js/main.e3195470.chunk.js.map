{"version":3,"sources":["App.js","Components/Button.js","reportWebVitals.js","index.js"],"names":["App","props","clickable","e","state","lastPressed","currentNum","boolean","Counter","innerText","target","array","setState","console","log","eval","splitted","split","length","includes","lastI","deleteIndex","reverse","findIndex","char","slice","isNaN","Number","undefined","this","className","onClick","id","display","map","items","index","func","info","Component","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3195470.chunk.js","sourcesContent":["import React , {Component} from 'react'\nimport Button from './Components/Button'\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props) \n    this.state = {\n      currentNum: \"0\",\n      lastPressed: undefined ,\n      boolean : 0,\n      Counter : 0\n    }\n  }\n  clickable = (e) => {\n    const {lastPressed , currentNum , boolean , Counter} = this.state;\n    const {innerText} = e.target;\n    const array = [\"+\" , \"-\" , \"*\" , \"/\"];\n    \n\n      \n    if(innerText === \"=\"){\n      this.setState({\n        Counter:Counter + 1\n      })\n    }\n    if(innerText === \"-\"){\n      this.setState({\n        boolean:boolean + 1\n      })\n    }    \n      \n        if(innerText===\"-\"){\n          if(Counter<=1 && boolean <1) {\n          this.setState({\n            currentNum:currentNum + ` ${innerText}`,\n            lastPressed:innerText\n          })\n        }\n        }else {\n          this.setState({\n            currentNum:currentNum+innerText,\n            lastPressed: innerText , \n            boolean: 0\n          })\n        }\n        console.log(lastPressed , innerText)\n      \n    switch(innerText) {\n         case \"CE\" :\n           this.setState({\n             currentNum:\"0\",\n             Counter : 0 ,\n             boolean : 0\n           })\n           break;\n         case \"=\" :\n           const e = eval(currentNum);\n            this.setState({\n              currentNum:e , \n              Counter: Counter + 1 , \n              boolean : 0\n             })\n           break;\n          case \".\" :\n            const splitted = currentNum.split(/[\\+\\-\\*\\/]/);\n            if(!splitted[splitted.length-1].includes(innerText)){\n              this.setState({\n                currentNum:currentNum+innerText\n              })\n            }else {\n              this.setState({\n                currentNum:currentNum\n              })\n            }\n            break;\n         default: {\n              if(array.includes(lastPressed) ){\n                if(array.includes(innerText) && innerText!==\"-\"){\n                  const lastI = currentNum.split(\"\");\n                  const deleteIndex = lastI.reverse().findIndex( char=>\n                  char!==\" \" && (char>0 || char<10)\n                )\n                this.setState({\n                  currentNum: currentNum.slice(0,lastI.length-deleteIndex) + ` ${innerText} ` ,\n                  Counter: 0 ,\n                  boolean : 0\n                })\n              }\n              } else {\n                  if(boolean<1){\n                    if(array.includes(innerText)){\n                      this.setState({\n                        currentNum: currentNum ===\"0\" ? innerText : currentNum+` ${innerText} `,\n                        Counter: 0\n                      })\n                    }else {\n                      this.setState({\n                        currentNum: currentNum ===\"0\" ? innerText : currentNum+innerText , \n                        Counter: 0\n                      })\n                    }\n                  }\n                \n              }\n         }\n      }\n      if(innerText.length > 1) {\n        this.setState({\n          currentNum:currentNum\n        })\n      }\n      if(innerText===\"CE\"){\n        this.setState({\n          currentNum:\"0\" , \n          Counter : 0 ,\n          boolean : 0\n        })\n      }\n      if(array.includes(innerText) && currentNum===\"0\"){\n        this.setState({\n          currentNum:\"0\"\n        })\n      }\n      if(lastPressed===\"=\" && !isNaN(Number(innerText))){\n        this.setState({\n          currentNum:innerText,\n          boolean : 0 , \n          Counter : 0\n        })\n      }\n    }\n    \n  render(){\n    let listItems = [\n      {\n        id:\"AC\",\n        display: \"CE\"\n      },\n      {\n        id:\"divide\",\n        display: \"/\"\n      },\n      {\n        id:\"seven\",\n        display: \"7\"\n      },\n      {\n        id:\"eigth\",\n        display: \"8\"\n      },\n      {\n        id:\"nine\",\n        display: \"9\"\n      },\n      {\n        id:\"multiply\",\n        display: \"*\"\n      },\n      {\n        id:\"four\",\n        display: \"4\"\n      },\n      {\n        id:\"five\",\n        display: \"5\"\n      },\n      {\n        id:\"six\",\n        display: \"6\"\n      },\n      {\n        id:\"subtract\",\n        display: \"-\"\n      },\n      {\n        id:\"one\",\n        display: \"1\"\n      },\n      {\n        id:\"two\",\n        display: \"2\"\n      },\n      {\n        id:\"three\",\n        display: \"3\"\n      },\n      {\n        id:\"add\",\n        display: \"+\"\n      },\n      {\n        id:\"zero\",\n        display: \"0\"\n      },\n      {\n        id:\"decimal\",\n        display: \".\"\n      },\n      {\n        id:\"equals\",\n        display: \"=\"\n      }\n    ]\n  const {currentNum} = this.state;\n  return (\n    <div className=\"parent\">\n      <div onClick = {this.clickable} className=\"App\">\n      <div className = \"result\">\n        {currentNum}\n      </div>\n     { listItems.map( (items , index) => \n        <Button  func = {items.id} key = {index} info={items}/>\n      )\n    }      \n    </div>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","import React , {Component} from \"react\";\r\nimport '../CSS/parent.css'\r\nimport '..//CSS/button.css'\r\n\r\n\r\nexport default class Button extends Component {\r\n  \r\n  render(){\r\n    \r\n    return(\r\n      <div id={this.props.info.display} className={this.props.info.id}>\r\n        {this.props.info.display}\r\n      </div>\r\n    )\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}